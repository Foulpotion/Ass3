# -*- coding: utf-8 -*-
"""UCS654_Ass3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jvsU6tTse2zGxtnZaFRFZ4FjuX9r-tFM
"""

pip install torch

pip install tensorflow

pip install flax

pip install transformers

pip install sentence_transformers transformers

import pandas as pd
from sentence_transformers import SentenceTransformer, util

model_name = "Sakil/sentence_similarity_semantic_search"
model = SentenceTransformer(model_name)

pip install datasets

from datasets import load_dataset

dataset_name = "charsiu/Common_voice_sentence_similarity"
dataset = load_dataset(dataset_name)

dataset

dataset.keys()

df = pd.DataFrame(dataset['test'])

df

sentence1 = df['sentence_a']
sentence2 = df['sentence_b']

embeddings = model.encode([sentence1, sentence2], convert_to_tensor=True)
embeddings

embedding1 = model.encode(sentence1, convert_to_tensor=False)
embedding2 = model.encode(sentence2, convert_to_tensor=False)

cos_sim_1 = util.pytorch_cos_sim(embedding1[0], embedding2[0])
cos_sim_1

cos_sim = util.pytorch_cos_sim(embeddings[0], embeddings[1])
cos_sim

print(f"Cosine similarity between sentence 1 and sentence 2: {cos_sim.item()}")



import seaborn as sns
import matplotlib.pyplot as plt

cos_sim_scalar = cos_sim_1.item()

# Create a heatmap using Seaborn
sns.heatmap([[cos_sim_scalar]], annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Cosine Similarity Between Sentences')
plt.xlabel('Sentence 1')
plt.ylabel('Sentence 2')
plt.show()

cos_sim_scalar_1 = cos_sim.item()

df_cos_sim_1 = pd.DataFrame({'Cosine Similarity': [cos_sim_scalar_1]})

# Violin plot
plt.figure(figsize=(8, 6))
sns.violinplot(data=df_cos_sim_1)
plt.title('Cosine Similarity Between Sentences')
plt.ylabel('Cosine Similarity')
plt.show()

df_cos_sim = pd.DataFrame({'Cosine Similarity': [cos_sim_scalar]})

plt.figure(figsize=(8, 6))
sns.barplot(data=df_cos_sim)
plt.title('Cosine Similarity Between Sentences')
plt.ylabel('Cosine Similarity')
plt.show()

